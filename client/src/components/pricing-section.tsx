import { motion } from "framer-motion";
import { Check } from "lucide-react";
import { useIntersection } from "@/hooks/use-intersection";

const plans = [
  {
    emoji: "üöÄ",
    name: "–°—Ç–∞—Ä—Ç",
    price: "–ë–µ—Å–ø–ª–∞—Ç–Ω–æ",
    description: "–ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è —á–∞—Å—Ç–Ω—ã—Ö –ª–∏—Ü",
    features: [
      "5 —Å–≤–∞–π–ø–æ–≤ –≤ –¥–µ–Ω—å",
      "–ë–∞–∑–æ–≤—ã–π –ø—Ä–æ—Ñ–∏–ª—å",
      "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –ø–æ email"
    ],
    buttonText: "–ù–∞—á–∞—Ç—å",
    popular: false
  },
  {
    emoji: "‚ö°",
    name: "–ë–∞–∑–æ–≤—ã–π",
    price: "$15",
    period: "/–º–µ—Å—è—Ü",
    description: "–î–ª—è –Ω–µ–±–æ–ª—å—à–∏—Ö –∫–æ–º–∞–Ω–¥",
    features: [
      "–ù–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–µ —Å–≤–∞–π–ø—ã",
      "–í–∏–¥–µ–æ—Ä–µ–∑—é–º–µ",
      "–ë–∞–∑–æ–≤–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞",
      "–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞"
    ],
    buttonText: "–í—ã–±—Ä–∞—Ç—å –ë–∞–∑–æ–≤—ã–π",
    popular: true
  },
  {
    emoji: "üî•",
    name: "–ü—Ä–æ",
    price: "$199",
    period: "/–º–µ—Å—è—Ü",
    description: "–î–ª—è —Ä–∞—Å—Ç—É—â–∏—Ö –∫–æ–º–ø–∞–Ω–∏–π",
    features: [
      "–í—Å–µ –∏–∑ –ë–∞–∑–æ–≤–æ–≥–æ",
      "–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –ò–ò-–ø–æ–¥–±–æ—Ä",
      "–ö–æ–º–∞–Ω–¥–Ω–æ–µ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ",
      "–ö–∞—Å—Ç–æ–º–Ω—ã–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏",
      "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7"
    ],
    buttonText: "–í—ã–±—Ä–∞—Ç—å –ü—Ä–æ",
    popular: false
  }
];

export default function PricingSection() {
  const [ref, isVisible] = useIntersection({ threshold: 0.3 });

  return (
    <section 
      id="pricing"
      ref={ref}
      className="py-20 bg-gradient-to-br from-quantum-gray to-white"
      data-testid="pricing-section"
    >
      <div className="max-w-7xl mx-auto px-6">
        <motion.div 
          className="text-center mb-16"
          initial={{ opacity: 0, y: 50 }}
          animate={isVisible ? { opacity: 1, y: 0 } : {}}
          transition={{ duration: 0.8 }}
        >
          <h2 className="text-5xl font-black mb-6">
            <span className="text-gray-900">–ü—Ä–æ—Å—Ç–æ–µ</span>
            <span className="text-gradient-neural ml-2">—Ü–µ–Ω–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ</span>
          </h2>
          <p className="text-xl text-gray-600">–í—ã–±–µ—Ä–∏—Ç–µ –ø–ª–∞–Ω, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–¥—Ö–æ–¥–∏—Ç —Ä–∞–∑–º–µ—Ä—É –≤–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã –∏ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—è–º –≤ –Ω–∞–π–º–µ</p>
        </motion.div>

        <div className="grid md:grid-cols-3 gap-8">
          {plans.map((plan, index) => (
            <motion.div
              key={plan.name}
              className={`neomorphic rounded-3xl p-8 text-center hover:shadow-2xl transition-all duration-500 cursor-pointer ${
                plan.popular ? 'border-2 border-neural-blue relative' : ''
              }`}
              initial={{ opacity: 0, y: 30 }}
              animate={isVisible ? { opacity: 1, y: 0 } : {}}
              transition={{ duration: 0.8, delay: index * 0.2 }}
              whileHover={{ 
                y: -8,
                scale: 1.02,
                transition: { duration: 0.3 }
              }}
              data-testid={`pricing-card-${plan.name.toLowerCase()}`}
            >
              {plan.popular && (
                <div className="absolute -top-3 left-1/2 transform -translate-x-1/2 bg-gradient-to-r from-neural-blue to-quantum-purple text-white px-4 py-1 rounded-full text-sm font-semibold">
                  –°–∞–º—ã–π –ø–æ–ø—É–ª—è—Ä–Ω—ã–π
                </div>
              )}
              
              <div className="mb-6">
                <div className="text-4xl mb-2">{plan.emoji}</div>
                <h3 className="text-2xl font-bold mb-2">{plan.name}</h3>
                <div className={`text-4xl font-black mb-2 ${
                  plan.name === '–°—Ç–∞—Ä—Ç' ? 'text-green-600' : 
                  plan.name === '–ë–∞–∑–æ–≤—ã–π' ? 'text-neural-blue' : 'text-quantum-purple'
                }`}>
                  {plan.price}
                  {plan.period && <span className="text-lg font-normal">{plan.period}</span>}
                </div>
                <p className="text-gray-600">{plan.description}</p>
              </div>
              
              <ul className="space-y-3 mb-8 text-left">
                {plan.features.map((feature) => (
                  <li key={feature} className="flex items-center">
                    <Check className="text-green-500 mr-3 flex-shrink-0" size={16} />
                    <span className="text-gray-700">{feature}</span>
                  </li>
                ))}
              </ul>
              
              <motion.button
                className={`w-full py-3 rounded-xl transition-all duration-300 font-semibold ${
                  plan.popular 
                    ? 'bg-gradient-to-r from-neural-blue to-quantum-purple text-white hover:shadow-lg'
                    : 'glassmorphic hover:shadow-lg hover:bg-white/50'
                }`}
                whileHover={{ scale: 1.05 }}
                whileTap={{ scale: 0.95 }}
                data-testid={`pricing-button-${plan.name.toLowerCase()}`}
              >
                {plan.buttonText}
              </motion.button>
            </motion.div>
          ))}
        </div>
      </div>
    </section>
  );
}
